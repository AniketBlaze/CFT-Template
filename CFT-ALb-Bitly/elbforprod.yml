AWSTemplateFormatVersion: 2010-09-09
Parameters:
  ExportuserstatuslambdaStack:
    Description: The name of userstatus  lambda
    Type: String
  ExporcampaignstatusLambdaStack:
    Description: The name of option handler lambda
    Type: String
  ExportOptionlambdastackname:
    Description: The name of option handler lambda
    Type: String
  ExportGetUserPrefilledDatalambdaStack:
    Description: The name of get user prefilled data 
    Type: String 
  ExportCampaignlistlambdaStack:
    Description: The name of get user prefilled data 
    Type: String 
  ExportCreateCampaignLambdaStack:
    Description: The name of get user prefilled data 
    Type: String 
  ExportDeleteCampaignLambdaStack:
    Description: the name of delete campaign stack name
    Type: String
  ExportDownloadKycdocslambdaStack:
    Description: the name of downloadkyc docs stack name 
    Type: String
  ExportDownloadReportLambdaStack:
    Description: the name of download report stack name
    Type: String  
  ExportGenerateOtpLambdaStack:  
    Description: the name of Generate Otp stack name
    Type: String  
  ExportGetUserbycampaignLambdaStack:
    Description: the name of GetUserbycampaign stack name
    Type: String 
  ExportSaveuserdatalambdalambdaStack:
    Description: the name of Saveuserdata stack name
    Type: String 
  # ExportProcessCsvlambdaStack:
  #   Description: the name of ProcessCsv stack name
  #   Type: String
  ExportUploadEkycDocslambdastack:
    Description: the name of upload ekyc docs stack name
    Type: String  
  ExportValidateUserOtplambdastack:
    Description: the name of validate otp stack name
    Type: String 
  ExportSendReminderlambdastack:
    Description: the name of send reminder stack name
    Type: String 
  ExportAdminloginLambdaStack:
    Description: the name of admin login lambda stack name
    Type: String 
  ExportAdminlogoutLambdaStack:  
    Description: the name of admin logout lambda stack name
    Type: String 
  ExportGeneratePreSignedUrllambdastack:
    Description: the name of presigned stack
    Type: String 
  ExportProcessCsvStartLambdastack:
    Description: the name of start csv handler stack
    Type: String   
  ExportStackNameSG:
    Description: Name for Security group
    Type: String                                      
  SubnetID1:
    Type: String
    Description: The Subnet for Lambda
  SubnetID2:
    Type: String
    Description: The Subnet for Lambda
  VpcID:
    Type: String
    Description: The VPC for Lambda 
  BucketName:
    Type: String
  CertificatManagerArn:
    Type: String
    Description: Certificate arn for https listener 
  Owner:
    Type: String
    Description: Owner Name for project      
  Environment:
    Type: String
    Description: Enviroment Name for project

  # EndUserUrl:
  #   Type: String
  #   # Default: http://hdfclife-bitly-uat-ui.s3-website.ap-south-1.amazonaws.com/u 
  #   Default: https://kuat.hdfclife.com/u
  #   Description: The Bucket Name to store the images
  # KmsKeyArn:
  #   Type: String
  #   Description: The KEY used by DynamoDb to encrypt
  # LambdaKmsKeyArn:
  #   Type: String
  #   Description: The KEY used by Lambda to encrypt


Resources:  
  #--------elastic load balancer------
  ApplicationloadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      IpAddressType: ipv4
      Name: !Sub bitly-${Environment}-int-alb
      Scheme: internal 
      LoadBalancerAttributes:
        - Key: access_logs.s3.enabled
          Value: true
        - Key: access_logs.s3.bucket
          Value: !Ref BucketName
          # key: access_logs.s3.prefix
          # Value: 
        - Key: idle_timeout.timeout_seconds
          Value: 4000 
      SecurityGroups:
        - Fn::ImportValue: !Sub '${ExportStackNameSG}-SecurityGroup'
      Subnets:
      - !Ref SubnetID1
      - !Ref SubnetID2 
      Type: application
      Tags:
        - 
          Key : "Project"
          Value: "bitly"
          Key: "Owner"
          Value: !Ref Owner
          Key: "Environment"
          Value: !Ref Environment
          Key: "Application"
          Value: "bitly"
      # LoadBalancerAttributes:
      #   - Key: "access_logs.s3.enabled"
      #     Value: "true"
      #   - Key: "access_logs.s3.bucket"
      #     Value: !Ref BucketName
      #   - Key: "idle_timeout.timeout_seconds"
      #     Value: "4000"
    # DependsOn:
    #   - Fn::ImportValue:
    #     Fn::Sub: "${ExportStackName}-LambdaSecurityGroup"          

  Listener1:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref AdminLoginTG  
      LoadBalancerArn: !Ref ApplicationloadBalancer  
      Port: '80'
      Protocol: HTTP

  Listener2:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      Certificates:
        - CertificateArn: !Ref CertificatManagerArn    
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref AdminLoginTG  
      LoadBalancerArn: !Ref ApplicationloadBalancer  
      Port: '443'
      Protocol: HTTPS

  AdminLoginTG:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub bitly-${Environment}-adminlogin-tg
      Targets:
      - Id:
         Fn::ImportValue: !Sub '${ExportAdminloginLambdaStack}-AdminLoginLambda' 
      TargetType: lambda  

  ListenerRule2:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: !Ref AdminLoginTG  
      Conditions:
        - Field: "http-request-method"
          HttpRequestMethodConfig:
            Values:
              - "POST"
        - Field: "path-pattern"
          PathPatternConfig:
            Values:
              - "/lambda/AdminLogin"
      ListenerArn: !Ref Listener1
      Priority: 2
    # DependsOn:
    #   - Fn::ImportValue:
    #       Fn::Sub: "${ExportlambdaStackName}-hdfcBitlyAdminLoginLambdaPermission"


      #-----------Traget Group---------------
  CampaignstatusTG:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub bitly-${Environment}-campstatus-tg
      Targets:
      - Id:
         Fn::ImportValue: !Sub '${ExporcampaignstatusLambdaStack}-campaignstatuslambda' 
      TargetType: lambda

  OptionHandlerTG:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub bitly-${Environment}-optionhdlr-tg
      Targets: 
      - Id:
         Fn::ImportValue: !Sub '${ExportOptionlambdastackname}-OptionHandlerLambda'          
      TargetType: lambda            

  GetUserPrefilledTG: 
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub bitly-${Environment}-getuser-tg
      Targets: 
      - Id:
         Fn::ImportValue: !Sub '${ExportGetUserPrefilledDatalambdaStack}-GetUserPrefilledDataLambda'                
      TargetType: lambda      
      
  ListCampaignTG:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub bitly-${Environment}-lstcampaign-tg
      Targets: 
      - Id:
         Fn::ImportValue: !Sub '${ExportCampaignlistlambdaStack}-ListCampaignLambda'          
      TargetType: lambda
    
  CreateCampaignTG:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub bitly-${Environment}-crcampaign-tg
      Targets:
      - Id:
         Fn::ImportValue: !Sub '${ExportCreateCampaignLambdaStack}-CreateCampaignLambda'         
      TargetType: lambda
     
#--------------------------------------------------done abtak------------
  DeleteCampaignTG:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub bitly-${Environment}-deltcampaign-tg
      Targets:
      - Id:
         Fn::ImportValue: !Sub '${ExportDeleteCampaignLambdaStack}-DeleteCampaignlambda'                  
      TargetType: lambda
     

  DownloadKycDocsTG:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub bitly-${Environment}-dwnldKyc-tg
      Targets:
      - Id:
         Fn::ImportValue: !Sub '${ExportDownloadKycdocslambdaStack}-DownloadKycDocsLambda'                
      TargetType: lambda


  userstatussubmittedtgs:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub bitly-${Environment}-userstatus-tg
      Targets:
      - Id:
         Fn::ImportValue: !Sub '${ExportuserstatuslambdaStack}-userstatussubmitted'                
      TargetType: lambda      
      

  DownloadReportTG:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub bitly-${Environment}-dwnldreprt-tg
      Targets:
      - Id:
         Fn::ImportValue: !Sub '${ExportDownloadReportLambdaStack}-DownloadReportLambda'                        
      TargetType: lambda
     

  GenerateOTPTG: 
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub bitly-${Environment}-geneotp-tg
      Targets: 
      - Id:
         Fn::ImportValue: !Sub '${ExportGenerateOtpLambdaStack}-GenerateOTPLambda'                                 
      TargetType: lambda
     

  GetUserByCampaignTG:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub bitly-${Environment}-getcamp-tg
      Targets:
      - Id:
         Fn::ImportValue: !Sub '${ExportGetUserbycampaignLambdaStack}-GetUserByCampaignLambda'           
      TargetType: lambda
      


  SaveUserDataTG:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub bitly-${Environment}-saveuser-tg
      Targets:
      - Id:
         Fn::ImportValue: !Sub '${ExportSaveuserdatalambdalambdaStack}-SaveUserDataLambda'                    
      TargetType: lambda
      

  # ProcessCsvTG:
  #   Type: AWS::ElasticLoadBalancingV2::TargetGroup
  #   Properties:
  #     Name: !Sub bitly-${Environment}-procsv-tg
  #     Targets:
  #     - Id:
  #        Fn::ImportValue: !Sub '${ExportProcessCsvlambdaStack}-ProcessCsvLambda'              
  #     TargetType: lambda
     

  UploadEkycDocsTG:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub bitly-${Environment}-uplodkyc-tg
      Targets:
      - Id:
         Fn::ImportValue: !Sub '${ExportUploadEkycDocslambdastack}-UploadEkycDocslambda'        
      TargetType: lambda
     

  ValidateUserOTPTG:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub bitly-${Environment}-valotp-tg
      Targets:
      - Id:
         Fn::ImportValue: !Sub '${ExportValidateUserOtplambdastack}-ValidateUserOTPLambda'        
      TargetType: lambda 
     

  SendReminderTG:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub bitly-${Environment}-sendre-tg
      Targets:
      - Id:
         Fn::ImportValue: !Sub '${ExportSendReminderlambdastack}-SendReminderLambda'            
      TargetType: lambda
      HealthCheckEnabled: enabled
      
     
  AdminLogoutTG:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub bitly-${Environment}-logout-tg
      Targets:
      - Id:
         Fn::ImportValue: !Sub '${ExportAdminlogoutLambdaStack}-LogoutLambda'      
      TargetType: lambda

  GeneratePreSignedUrlTG:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub bitly-${Environment}-preurl-tg
      Targets:
      - Id:
         Fn::ImportValue: !Sub '${ExportGeneratePreSignedUrllambdastack}-GeneratePreSignedUrllambda'              
      TargetType: lambda

  ProcessCsvStarthandlerTG:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub bitly-${Environment}-csvstart-tg
      Targets:
      - Id:
         Fn::ImportValue: !Sub '${ExportProcessCsvStartLambdastack}-ProcessCsvStartlambda'              
      TargetType: lambda
      HealthCheckEnabled: enabled


#---------------listnere rule for http listnere

  ListenerRule19:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: !Ref CampaignstatusTG  
      Conditions:
        - Field: "http-request-method"
          HttpRequestMethodConfig:
            Values:
              - "GET"
        - Field: "path-pattern"
          PathPatternConfig:
            Values:
              - "/lambda/GetCampaignStatus"
      ListenerArn: !Ref Listener1
      Priority: 19

  ListenerRule20:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: !Ref userstatussubmittedtgs  
      Conditions:
        - Field: "http-request-method"
          HttpRequestMethodConfig:
            Values:
              - "POST"
        - Field: "path-pattern"
          PathPatternConfig:
            Values:
              - "/lambda/userStatusSubmitted"
      ListenerArn: !Ref Listener1
      Priority: 20



  ListenerRule17:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: !Ref GeneratePreSignedUrlTG
      Conditions:
        - Field: "http-request-method"
          HttpRequestMethodConfig:
            Values:
              - "POST"
        - Field: "path-pattern"
          PathPatternConfig:
            Values:
              - "/lambda/GeneratePreSignedUr" 
      ListenerArn: !Ref Listener1
      Priority: 17

  ListenerRule1:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: !Ref OptionHandlerTG
      Conditions:
        - Field: "http-request-method"
          HttpRequestMethodConfig:
            Values:
              - "OPTIONS"
        # - Field: "path-pattern"
        #   PathPatternConfig:
        #     Values:
        #       - "/lambda/OptionHandler" 
      ListenerArn: !Ref Listener1
      Priority: 1



  ListenerRule18:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: !Ref ProcessCsvStarthandlerTG
      Conditions:
        - Field: "http-request-method"
          HttpRequestMethodConfig:
            Values:
              - "PUT"
        - Field: "path-pattern"
          PathPatternConfig:
            Values:
              - "/lambda/ProcessCsvStarthandler" 
      ListenerArn: !Ref Listener1
      Priority: 18      


  ListenerRule10:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: !Ref ListCampaignTG
      Conditions:
        - Field: "http-request-method"
          HttpRequestMethodConfig:
            Values:
              - "GET"
        - Field: "path-pattern"
          PathPatternConfig:
            Values:
              - "/lambda/ListCampaign" 
      ListenerArn: !Ref Listener1
      Priority: 10 
#    DependsOn: HdfcBitlyListCampaignlambdapermission   
      
  ListenerRule5 : 
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: !Ref CreateCampaignTG
      Conditions:
        - Field: "http-request-method"
          HttpRequestMethodConfig:
            Values:
              - "POST"
        - Field: "path-pattern"
          PathPatternConfig:
            Values:
              - "/lambda/CreateCampaign"
      ListenerArn: !Ref Listener1
      Priority: 5
 #   DependsOn: HdfcBitlyCreateCampaignNwLambdaPermission  

  ListenerRule6 : 
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: !Ref DeleteCampaignTG
      Conditions:
        - Field: "http-request-method"
          HttpRequestMethodConfig:
            Values:
              - "POST"
        - Field: "path-pattern"
          PathPatternConfig:
            Values:
              - "/lambda/DeleteCampaign"
      ListenerArn: !Ref Listener1
      Priority: 6
#    DependsOn: hdfcBitlyDeleteCampaignLambdaPermission 
      
  ListenerRule7 :
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: !Ref DownloadKycDocsTG
      Conditions:
        - Field: "http-request-method"
          HttpRequestMethodConfig:
            Values:
              - "POST"
        - Field: "path-pattern"
          PathPatternConfig:
            Values:
              - "/lambda/DownloadKycDocs"
      ListenerArn: !Ref Listener1
      Priority: 7
#    DependsOn: hdfcBitlyDownloadKycDocsLambdaPermission  
  
  ListenerRule8 : 
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: !Ref DownloadReportTG
      Conditions:
        - Field: "http-request-method"
          HttpRequestMethodConfig:
            Values:
              - "POST"
        - Field: "path-pattern"
          PathPatternConfig:
            Values:
              - "/lambda/DownloadReport"
      ListenerArn: !Ref Listener1
      Priority: 8
#    DependsOn: hdfcBitlyDownloadReportNewNewLambdaPermission  
    
  ListenerRule14 : 
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: !Ref GenerateOTPTG
      Conditions:
        - Field: "http-request-method"
          HttpRequestMethodConfig:
            Values:
              - "POST"
        - Field: "path-pattern"
          PathPatternConfig:
            Values:
              - "/lambda/GenerateOTP"
      ListenerArn: !Ref Listener1
      Priority: 14
#    DependsOn: hdfcBitlyGenerateOTPLambdaPermission 
  
  ListenerRule3:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: !Ref GetUserByCampaignTG
      Conditions:
        - Field: "http-request-method"
          HttpRequestMethodConfig:
            Values:
              - "POST"
        - Field: "path-pattern"
          PathPatternConfig:
            Values:
              - "/lambda/GetUserByCampaign"
      ListenerArn: !Ref Listener1
      Priority: 3
#    DependsOn: hdfcBitlyGetUserByCampaignLambdaPermission  
    
  ListenerRule12:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: !Ref SaveUserDataTG
      Conditions:
        - Field: "http-request-method"
          HttpRequestMethodConfig:
            Values:
              - "POST"
        - Field: "path-pattern"
          PathPatternConfig:
            Values:
              - "/lambda/SaveUserData"
      ListenerArn: !Ref Listener1
      Priority: 12
#    DependsOn: hdfcBitlySaveUserDataLambdaPermission  

  # ListenerRule4:
  #   Type: AWS::ElasticLoadBalancingV2::ListenerRule
  #   Properties:
  #     Actions:
  #       - Type: forward
  #         TargetGroupArn: !Ref ProcessCsvTG
  #     Conditions:
  #       - Field: "http-request-method"
  #         HttpRequestMethodConfig:
  #           Values:
  #             - "POST"
  #       - Field: "path-pattern"
  #         PathPatternConfig:
  #           Values:
  #             - "/lambda/ProcessCsv"
  #     ListenerArn: !Ref Listener1
  #     Priority: 4
#    DependsOn: hdfcBitlyProcessCsvLambdaPermission 
            
  ListenerRule16:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: !Ref UploadEkycDocsTG
      Conditions:
        - Field: "http-request-method"
          HttpRequestMethodConfig:
            Values:
              - "PUT"
        - Field: "path-pattern"
          PathPatternConfig:
            Values:
              - "/lambda/UploadEkycDocs"
      ListenerArn: !Ref Listener1
      Priority: 16
#    DependsOn: hdfcBitlyUploadEkycDocsNwLambdaPermission  
      
  ListenerRule15:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: !Ref ValidateUserOTPTG
      Conditions:
        - Field: "http-request-method"
          HttpRequestMethodConfig:
            Values:
              - "POST"
        - Field: "path-pattern"
          PathPatternConfig:
            Values:
              - "/lambda/ValidateUserOTP"
      ListenerArn: !Ref Listener1
      Priority: 15
#    DependsOn: hdfcBitlyValidateUserOTPNewLambdaPermission 
                 
      
  ListenerRule13:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: !Ref SendReminderTG
      Conditions:
        - Field: "http-request-method"
          HttpRequestMethodConfig:
            Values:
              - "POST"
        - Field: "path-pattern"
          PathPatternConfig:
            Values:
              - "/lambda/SendReminder"
      ListenerArn: !Ref Listener1
      Priority: 13
#    DependsOn: hdfcBitlySendReminderLambdaPermission  
      
  ListenerRule11:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: !Ref AdminLogoutTG
      Conditions:
        - Field: "http-request-method"
          HttpRequestMethodConfig:
            Values:
              - "POST"
        - Field: "path-pattern"
          PathPatternConfig:
            Values:
              - "/lambda/AdminLogout"
      ListenerArn: !Ref Listener1
      Priority: 11
#    DependsOn: hdfcBitlyAdminLogoutLambdaPermission 

  ListenerRule9:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: !Ref GetUserPrefilledTG
      Conditions:
        - Field: "http-request-method"
          HttpRequestMethodConfig:
            Values:
              - "POST"      
        - Field: "path-pattern"
          PathPatternConfig:
            Values: 
              - "/lambda/GetUserPrefilled"
      ListenerArn: !Ref Listener1
      Priority: 9   

#---------Listener rule for HTTPS Listener----

  Listener2Rule20:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: !Ref userstatussubmittedtgs  
      Conditions:
        - Field: "http-request-method"
          HttpRequestMethodConfig:
            Values:
              - "POST"
        - Field: "path-pattern"
          PathPatternConfig:
            Values:
              - "/lambda/userStatusSubmitted"
      ListenerArn: !Ref Listener2
      Priority: 20

  Listener2Rule19:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: !Ref CampaignstatusTG  
      Conditions:
        - Field: "http-request-method"
          HttpRequestMethodConfig:
            Values:
              - "GET"
        - Field: "path-pattern"
          PathPatternConfig:
            Values:
              - "/lambda/GetCampaignStatus"
      ListenerArn: !Ref Listener2
      Priority: 19

  Listener2Rule1:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: !Ref OptionHandlerTG
      Conditions:
        - Field: "http-request-method"
          HttpRequestMethodConfig:
            Values:
              - "OPTIONS"
        # - Field: "path-pattern"
        #   PathPatternConfig:
        #     Values:
        #       - "/lambda/OptionHandler" 
      ListenerArn: !Ref Listener2
      Priority: 1

  Listener2Rule17:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: !Ref GeneratePreSignedUrlTG
      Conditions:
        - Field: "http-request-method"
          HttpRequestMethodConfig:
            Values:
              - "POST"
        - Field: "path-pattern"
          PathPatternConfig:
            Values:
              - "/lambda/GeneratePreSignedUr" 
      ListenerArn: !Ref Listener2
      Priority: 17

  Listener2Rule18:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: !Ref ProcessCsvStarthandlerTG
      Conditions:
        - Field: "http-request-method"
          HttpRequestMethodConfig:
            Values:
              - "PUT"
        - Field: "path-pattern"
          PathPatternConfig:
            Values:
              - "/lambda/ProcessCsvStarthandler" 
      ListenerArn: !Ref Listener2
      Priority: 18


  Listener2Rule2:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: !Ref AdminLoginTG  
      Conditions:
        - Field: "http-request-method"
          HttpRequestMethodConfig:
            Values:
              - "POST"
        - Field: "path-pattern"
          PathPatternConfig:
            Values:
              - "/lambda/AdminLogin"
      ListenerArn: !Ref Listener2
      Priority: 2

  Listener2Rule10:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: !Ref ListCampaignTG
      Conditions:
        - Field: "http-request-method"
          HttpRequestMethodConfig:
            Values:
              - "GET"
        - Field: "path-pattern"
          PathPatternConfig:
            Values:
              - "/lambda/ListCampaign" 
      ListenerArn: !Ref Listener2
      Priority: 10 
#    DependsOn: HdfcBitlyListCampaignlambdapermission   
      
  Listener2Rule5 : 
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: !Ref CreateCampaignTG
      Conditions:
        - Field: "http-request-method"
          HttpRequestMethodConfig:
            Values:
              - "POST"
        - Field: "path-pattern"
          PathPatternConfig:
            Values:
              - "/lambda/CreateCampaign"
      ListenerArn: !Ref Listener2
      Priority: 5
 #   DependsOn: HdfcBitlyCreateCampaignNwLambdaPermission  

  Listener2Rule6 : 
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: !Ref DeleteCampaignTG
      Conditions:
        - Field: "http-request-method"
          HttpRequestMethodConfig:
            Values:
              - "POST"
        - Field: "path-pattern"
          PathPatternConfig:
            Values:
              - "/lambda/DeleteCampaign"
      ListenerArn: !Ref Listener2
      Priority: 6
#    DependsOn: hdfcBitlyDeleteCampaignLambdaPermission 
      
  Listener2Rule7 :
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: !Ref DownloadKycDocsTG
      Conditions:
        - Field: "http-request-method"
          HttpRequestMethodConfig:
            Values:
              - "POST"
        - Field: "path-pattern"
          PathPatternConfig:
            Values:
              - "/lambda/DownloadKycDocs"
      ListenerArn: !Ref Listener2
      Priority: 7
#    DependsOn: hdfcBitlyDownloadKycDocsLambdaPermission  
  
  Listener2Rule8 : 
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: !Ref DownloadReportTG
      Conditions:
        - Field: "http-request-method"
          HttpRequestMethodConfig:
            Values:
              - "POST"
        - Field: "path-pattern"
          PathPatternConfig:
            Values:
              - "/lambda/DownloadReport"
      ListenerArn: !Ref Listener2
      Priority: 8
#    DependsOn: hdfcBitlyDownloadReportNewNewLambdaPermission  
    
  Listener2Rule14 : 
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: !Ref GenerateOTPTG
      Conditions:
        - Field: "http-request-method"
          HttpRequestMethodConfig:
            Values:
              - "POST"
        - Field: "path-pattern"
          PathPatternConfig:
            Values:
              - "/lambda/GenerateOTPNw"
      ListenerArn: !Ref Listener2
      Priority: 14
#    DependsOn: hdfcBitlyGenerateOTPLambdaPermission 
  
  Listener2Rule3:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: !Ref GetUserByCampaignTG
      Conditions:
        - Field: "http-request-method"
          HttpRequestMethodConfig:
            Values:
              - "POST"
        - Field: "path-pattern"
          PathPatternConfig:
            Values:
              - "/lambda/GetUserByCampaign"
      ListenerArn: !Ref Listener2
      Priority: 3
#    DependsOn: hdfcBitlyGetUserByCampaignLambdaPermission  
    
  Listener2Rule12:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: !Ref SaveUserDataTG
      Conditions:
        - Field: "http-request-method"
          HttpRequestMethodConfig:
            Values:
              - "POST"
        - Field: "path-pattern"
          PathPatternConfig:
            Values:
              - "/lambda/SaveUserData"
      ListenerArn: !Ref Listener2
      Priority: 12
#    DependsOn: hdfcBitlySaveUserDataLambdaPermission  

  # Listener2Rule4:
  #   Type: AWS::ElasticLoadBalancingV2::ListenerRule
  #   Properties:
  #     Actions:
  #       - Type: forward
  #         TargetGroupArn: !Ref ProcessCsvTG
  #     Conditions:
  #       - Field: "http-request-method"
  #         HttpRequestMethodConfig:
  #           Values:
  #             - "POST"
  #       - Field: "path-pattern"
  #         PathPatternConfig:
  #           Values:
  #             - "/lambda/ProcessCsv"
  #     ListenerArn: !Ref Listener2
  #     Priority: 4
#    DependsOn: hdfcBitlyProcessCsvLambdaPermission 
            
  Listener2Rule16:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: !Ref UploadEkycDocsTG
      Conditions:
        - Field: "http-request-method"
          HttpRequestMethodConfig:
            Values:
              - "PUT"
        - Field: "path-pattern"
          PathPatternConfig:
            Values:
              - "/lambda/UploadEkycDocs"
      ListenerArn: !Ref Listener2
      Priority: 16
#    DependsOn: hdfcBitlyUploadEkycDocsNwLambdaPermission  
      
  Listener2Rule15:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: !Ref ValidateUserOTPTG
      Conditions:
        - Field: "http-request-method"
          HttpRequestMethodConfig:
            Values:
              - "POST"
        - Field: "path-pattern"
          PathPatternConfig:
            Values:
              - "/lambda/ValidateUserOTP"
      ListenerArn: !Ref Listener2
      Priority: 15
#    DependsOn: hdfcBitlyValidateUserOTPNewLambdaPermission 
                 
      
  Listener2Rule13:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: !Ref SendReminderTG
      Conditions:
        - Field: "http-request-method"
          HttpRequestMethodConfig:
            Values:
              - "POST"
        - Field: "path-pattern"
          PathPatternConfig:
            Values:
              - "/lambda/SendReminder"
      ListenerArn: !Ref Listener2
      Priority: 13
#    DependsOn: hdfcBitlySendReminderLambdaPermission  
      
  Listener2Rule11:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: !Ref AdminLogoutTG
      Conditions:
        - Field: "http-request-method"
          HttpRequestMethodConfig:
            Values:
              - "POST"
        - Field: "path-pattern"
          PathPatternConfig:
            Values:
              - "/lambda/AdminLogout"
      ListenerArn: !Ref Listener2
      Priority: 11
#    DependsOn: hdfcBitlyAdminLogoutLambdaPermission 

  Listener2Rule9:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: !Ref GetUserPrefilledTG
      Conditions:
        - Field: "http-request-method"
          HttpRequestMethodConfig:
            Values:
              - "POST"      
        - Field: "path-pattern"
          PathPatternConfig:
            Values: 
              - "/lambda/GetUserPrefilled"
      ListenerArn: !Ref Listener2
      Priority: 9

Outputs:
  LoadBalancerName:
    Description: Endpoint of load balancer
    Value: !GetAtt ApplicationloadBalancer.DNSName