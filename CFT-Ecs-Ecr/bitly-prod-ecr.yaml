AWSTemplateFormatVersion: 2010-09-09
Parameters:
  SubnetID1:
    Type: String
    Description: The Subnet for Lambda
  VpcID:
    Type: String
    Description: The VPC for Lambda 
  ExportStackNameSG:
    Type: String
    Description: Security group for ecs service  
  RoleNameARN:
    Type: String
    Description: task role
  Environment:
    Description: Name of Env
    Type: String
  ClusterArn:
    Description: cluster arn 
    Type: String        

Resources:
  ClusterServiceforsendsms: 
    Type: AWS::ECS::Service
    Properties: 
      Cluster: !Ref ClusterArn
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 100
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          SecurityGroups:
          - Fn::ImportValue: !Sub '${ExportStackNameSG}-SecurityGroup'
          Subnets:
            - !Ref SubnetID1
      PlatformVersion: LATEST
#      Role: arn:aws:iam::921954676015:role/aws-service-role/ecs.amazonaws.com/AWSServiceRoleForECS
      SchedulingStrategy: REPLICA  
      DesiredCount: 0  
      ServiceName: !Sub bitly-${Environment}-send-sms
      TaskDefinition: !Ref Taskdefinationforsendsms

  ClusterServiceForCampaignProcess:
    Type: AWS::ECS::Service
    Properties: 
      Cluster: !Ref ClusterArn
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 100
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          SecurityGroups: 
          - Fn::ImportValue: !Sub '${ExportStackNameSG}-SecurityGroup'
          Subnets: 
            - !Ref SubnetID1
      PlatformVersion: LATEST
#      Role: arn:aws:iam::921954676015:role/aws-service-role/ecs.amazonaws.com/AWSServiceRoleForECS
      SchedulingStrategy: REPLICA 
      DesiredCount: 0   
      ServiceName: !Sub bitly-${Environment}-campaign-processcsv
      TaskDefinition: !Ref Taskdefinationforcampaignprocss
      


  MyRepositoryForsms: 
    Type: AWS::ECR::Repository
    Properties: 
      RepositoryName: "bitly-prod-sendsms"
      RepositoryPolicyText: 
        Version: "2012-10-17"
        Statement: 
          - 
            Sid: AllowPushPull
            Effect: Allow
            Principal: 
              AWS: 
                - "arn:aws:iam::251899213637:user/chandrashekhar.d@hdfclife.com"
            Action: 
              - "ecr:GetDownloadUrlForLayer"
              - "ecr:BatchGetImage"
              - "ecr:BatchCheckLayerAvailability"
              - "ecr:PutImage"
              - "ecr:InitiateLayerUpload"
              - "ecr:UploadLayerPart"
              - "ecr:CompleteLayerUpload"      

  MyRepositoryForprocess: 
    Type: AWS::ECR::Repository
    Properties: 
      RepositoryName: "bitly-prod-campaign-processcsv"
      RepositoryPolicyText: 
        Version: "2012-10-17"
        Statement: 
          - 
            Sid: AllowPushPull
            Effect: Allow
            Principal: 
              AWS: 
                - "arn:aws:iam::251899213637:user/chandrashekhar.d@hdfclife.com"
            Action: 
              - "ecr:GetDownloadUrlForLayer"
              - "ecr:BatchGetImage"
              - "ecr:BatchCheckLayerAvailability"
              - "ecr:PutImage"
              - "ecr:InitiateLayerUpload"
              - "ecr:UploadLayerPart"
              - "ecr:CompleteLayerUpload"

  downloadreport: 
    Type: AWS::ECR::Repository
    Properties: 
      RepositoryName: "bitly-prod-download-report"
      RepositoryPolicyText: 
        Version: "2012-10-17"
        Statement: 
          - 
            Sid: AllowPushPull
            Effect: Allow
            Principal: 
              AWS: 
                - "arn:aws:iam::251899213637:user/chandrashekhar.d@hdfclife.com"
            Action: 
              - "ecr:GetDownloadUrlForLayer"
              - "ecr:BatchGetImage"
              - "ecr:BatchCheckLayerAvailability"
              - "ecr:PutImage"
              - "ecr:InitiateLayerUpload"
              - "ecr:UploadLayerPart"
              - "ecr:CompleteLayerUpload"              


  Taskdefinationforsendsms:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - Name: bitly-prod-sendsms
          Image: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/bitly-prod-sendsms:latest
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: /ecs/sendsms
              awslogs-region: !Ref AWS::Region 
              awslogs-stream-prefix: ecs         
      Cpu: 256
      Memory: 1024
      NetworkMode: awsvpc
      RequiresCompatibilities: 
        - FARGATE
      ExecutionRoleArn: !Ref RoleNameARN   
      TaskRoleArn: !Ref RoleNameARN
      Family: bitly-prod-sendsms   

  Taskdefinationforcampaignprocss:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - Name: bitly-prod-campaign-processcsv
          Image: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/bitly-prod-campaign-processcsv:latest
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: /ecs/processcsv
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: ecs
      Cpu: 4096
      Memory: 30720
      NetworkMode: awsvpc
      RequiresCompatibilities: 
        - FARGATE
      ExecutionRoleArn: !Ref RoleNameARN   
      TaskRoleArn: !Ref RoleNameARN  
      Family: bitly-prod-campaign-processcsv 

  # CloudWatchLogsGroup1:
  #   Type: AWS::Logs::LogGroup
  #   Properties:
  #     LogGroupName: process-csv-log-group
  #     RetentionInDays: 14  

  # CloudWatchLogsGroup2:
  #   Type: AWS::Logs::LogGroup
  #   Properties:
  #     LogGroupName: sen-sms-log-group
  #     RetentionInDays: 14