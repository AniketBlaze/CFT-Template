AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Parameters:
  ExportStackUserTableName:
    Description: The name userdb table name
    Type: String
  ExportStackCampaignTableName:
    Description: The name CampaignTable name
    Type: String
  ExportStackAuthTableName:
    Description: The name AuthTable name
    Type: String
  ExportStackLogsTableName:
    Description: The name LogsTable name
    Type: String
  # ExportStackNameSG:
  #   Description: Name for Security group
  #   Type: String
  Owner:
    Type: String
    Description: Owner Name for project
  Environment:
    Description: Name of Env
    Type: String
  # SubnetID1:
  #   Type: String
  #   Description: The Subnet for Lambda
  # SubnetID2:
  #   Type: String
  #   Description: The Subnet for Lambda
  # VpcID:
  #   Type: String
  #   Description: The VPC for Lambda
  #   Default: None
  DocBucketName:
    Type: String
    Description: The Bucket Name to store the images
  EndUserUrl:
    Type: String
    Description: The Bucket Name to store the images
  KmsKeyArn:
    Type: String
    Description: The KEY used by DynamoDb to encrypt
  LambdaKmsKeyArn:
    Type: String
    Description: The KEY used by Lambda to encrypt
Resources:
  DownloadKycDocsLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName:
        Fn::Sub: bitly-${Environment}-downloadkycdocs-lambda
      Handler: org.hdfc.bitly.handler.DownloadKYCFileHandler::handleRequest
      Runtime: java8
      CodeUri: s3://common-prod-sam-artifact/org.hdfc.bitly-1.0.10.jar
      MemorySize: 512
      Timeout: 900
      Environment:
        Variables:
          aws_region:
            Ref: AWS::Region
          kms_key_arn:
            Ref: KmsKeyArn
          bucket_name:
            Ref: DocBucketName
      Role:
        Fn::GetAtt:
        - DownloadKycDocsLambdaRole
        - Arn
      KmsKeyArn:
        Ref: LambdaKmsKeyArn
      # VpcConfig:
      #   SecurityGroupIds:
      #   - Fn::ImportValue:
      #       Fn::Sub: ${ExportStackNameSG}-SecurityGroup
      #   SubnetIds:
      #   - Ref: SubnetID1
      Tags:
        Project: HDFC_BITLY
        Owner:
          Ref: Owner
        Environment:
          Ref: Environment
        Application: HDFC-BITLY
  DownloadKycDocsLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::Sub: bitly-${Environment}-downloadkycdocs-lambda
      Principal: elasticloadbalancing.amazonaws.com
    DependsOn: DownloadKycDocsLambda
  DownloadKycDocsLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName:
        Fn::Sub: bitly-${Environment}-kycdocslambda-role
      Path: /
      Tags:
      - Key: Application
        Value: Bitly
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
      - arn:aws:iam::aws:policy/AWSKeyManagementServicePowerUser
      - arn:aws:iam::aws:policy/AmazonSNSFullAccess
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - sts:AssumeRole
          Principal:
            Service:
            - lambda.amazonaws.com
      Policies:
      - PolicyName: Bitly-CW-Logs
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - logs:*
            Resource: '*'
      - PolicyName: Lambda-Invoke
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - lambda:InvokeAsync
            - lambda:InvokeFunction
            Resource: '*'
      - PolicyName: S3-CrudAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - s3:GetObject
            - s3:ListBucket
            - s3:GetBucketLocation
            - s3:GetObjectVersion
            - s3:PutObject
            - s3:PutObjectAcl
            - s3:GetLifecycleConfiguration
            - s3:PutLifecycleConfiguration
            - s3:DeleteObject
            Resource:
            - Fn::Sub: arn:${AWS::Partition}:s3:::${DocBucketName}
            - Fn::Sub: arn:${AWS::Partition}:s3:::${DocBucketName}/*
      - PolicyName: kms-policy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - kms:Encrypt
            - kms:Decrypt
            - kms:ReEncrypt*
            - kms:GenerateDataKey*
            - kms:DescribeKey
            - kms:CreateGrant 
            Resource: '*'
            Action: kms:*
            Resource:
            - arn:aws:kms:ap-south-1:542343947608:key/738e882f-2db5-4013-ad1d-161293386af9
            - arn:aws:kms:ap-south-1:542343947608:key/2c26baba-7aac-45e6-88dc-c5b5c8b96e3d
            - arn:aws:kms:ap-south-1:542343947608:key/a67166cf-6da7-4083-abd3-2d06296f5c46
            - arn:aws:kms:ap-south-1:542343947608:key/b287fb93-6dd3-478f-9de9-9e9c8c0740af

      - PolicyName: DynamoDb-Access
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - dynamodb:GetItem
            - dynamodb:DeleteItem
            - dynamodb:PutItem
            - dynamodb:Scan
            - dynamodb:Query
            - dynamodb:UpdateItem
            - dynamodb:BatchWriteItem
            - dynamodb:BatchGetItem
            - dynamodb:DescribeTable
            - dynamodb:GetRecords
            - dynamodb:Scan
            - dynamodb:UpdateTable
            Resource:
            - Fn::ImportValue:
                Fn::Sub: ${ExportStackUserTableName}-UserDynamoDbTable
            - Fn::ImportValue:
                Fn::Sub: ${ExportStackCampaignTableName}-CampaignDynamodbTable
            - Fn::ImportValue:
                Fn::Sub: ${ExportStackAuthTableName}-AuthDynamoDBtable
            - Fn::ImportValue:
                Fn::Sub: ${ExportStackLogsTableName}-LogsDynamoDbTable
  DownloadKycDocsLambdaRolePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: ec2-permission
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - ec2:DescribeNetworkInterfaces
          - ec2:DeleteNetworkInterface
          - ec2:DeleteNetworkInterface
          Resource: '*'
      Roles:
      - Fn::Sub: bitly-${Environment}-kycdocslambda-role
    DependsOn: DownloadKycDocsLambdaRole
Outputs:
  DownloadKycDocsLambda:
    Description: Lambda for download kyc docs
    Value:
      Fn::GetAtt:
      - DownloadKycDocsLambda
      - Arn
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-DownloadKycDocsLambda